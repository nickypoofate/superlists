to activate virtual environment:

source virtualenv/bin/activate

to deactivate virtual environment

deactivate

functional_test.py ==
start selnium webdriver to open a firefox browser window
open localhost
check to see it has Django in the title

django-admin.py startproject superlists . ==
creates file called manage.py and a subfolder called superlists
superlists is for stuff that applies to the whole project.

manage.py is Django's swiss army knife

python3 manage.py runserver (./manage.py runserver)  ==
start django server

git init . ==
start version control with git

.gitignore ==
ignores files (sql folder, geckodriver, virtual environment)
(echo "db.sqlite3" >> .gitignore) syntax
$ git rm -r --cached superlists/__pycache__
rm 'superlists/__pycache__/__init__.cpython-37.pyc'
rm 'superlists/__pycache__/settings.cpython-37.pyc'
rm 'superlists/__pycache__/urls.cpython-37.pyc'
rm 'superlists/__pycache__/wsgi.cpython-37.pyc'
$ echo "__pycache__" >> .gitignore
$ echo "*.pyc" >> .gitignore

functional test == acceptance test == end-to-end test

python3 manage.py startapp lists (or whatever the name of yer app is)

functional tests test the app from the outside.
unit tests test the app from the inside.

python3 manage.py test ==
run tests written in test.py

resolve is the func that django uses to resolve urls and find what view
function they should map to.  check that resolve when called with '/' finds
a function called home_page

httprequest object is what django sees when a users browser asks for a page

response is an instance of a class called httpresponse

the .content of the response are raw bytes. decode() with utf8 to convert to 
a human readable format

git log --oneline to show what you've done


